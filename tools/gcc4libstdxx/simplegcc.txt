Crude instructions on how to build Nios GCC 4.1 toolchain with libstdc++ w/POSIX threads
========================================================================================
Warning! GCC 4.1 is a bit rough around the edges, so if you can get hold of
a binary GCC toolchain, you'll save yourself quite a bit of time. 

Things to install... maybe?

apt-get install tetex-bin



0. Source code/downloads
See http://www.nioswiki.com for source code to GCC. It's part
of the Linux MMU distribution, surprise-surprise...

Source code, is this official address to get this??? Where is it advertised?

http://www.niosftp.com/pub/gnutools/
http://www.niosftp.com/pub/gnutools/wrs-linux-4.1-176-nios2-wrs-linux-gnu.src.tar.bz2

Prebuilt Ubuntu binaries:

http://opensource.zylin.com/gcc/binaries/nios/nios2-elf-gcc-4.1-pthreads-linux.tar.bz2



1. First build eCos w/POSIX threads

cd nios2ecos
. nios2_env.sh
# use modified POSIX module not yet in eCos CVS mainline
export ECOS_REPOSITORY=`pwd`/tools/gcc4libstdxx/ecos:$ECOS_REPOSITORY
mkdir ~/buildgcc
cd ~/buildgcc
mkdir ecos
cd ecos
nios2configgen --ptf=/home/oyvind/workspace/nios2ecos/neek/neek.ptf --cpu=cpu
ecosconfig new nios2_neek default
ecosconfig import $NIOS_ECOS/../tools/gcc4libstdxx/headers.ecm
ecosconfig tree
make headers
make 

NB!!!! the nios2ecos make files are broken in that "make headers" does not create
cyg/hal/system.h

2. Build binutils

sudo apt-get install gobjc++
tar -xjvf src/binutils-4.1-176.tar.bz2

export PATH=`pwd`/install/bin:$PATH
mkdir build
cd build
../binutils-2.17.50/configure --prefix=`pwd`/../install --target=nios2-elf  --disable-shared --disable-werror --disable-nls --disable-doc
make 
make install

if you get error message about missing elf32-target.h, type:

cd bfd
make elf32-target.h
cd ..

2. Build GCC using eCos header files

tar -xjvf src/gcc-4.1-176.tar.bz2
cd gcc-4.1-176

../gcc-4.1/configure --prefix=`pwd`/../install --target=nios2-elf --enable-languages=c,c++ --with-gnu-ld --disable-shared --disable-nls --enable-threads=posix --with-gnu-as --enable-libstdcxx-allocator=malloc --enable-cstdio=stdio --with-newlib  --disable-unix98 --with-headers=`pwd`/../ecos/install/include --enable-multilib --disable-libstdcxx-pch --enable-sjlj-exceptions --disable-werror  --disable-doc
make >errors.txt 2>&1

Problems: c++locale.c does has fallback code for strtof that doesn't
kick in, modify c++locale.c to #if 0 the strtof path.


3. Build GDB

../gdb-wrs/configure --prefix=`pwd`/../install --target=nios2-elf  --disable-shared --disable-werror




Troubleshooting:

If you get:

WARNING: `makeinfo' is missing on your system.  You should only need it if
         you modified a `.texi' or `.texinfo' file, or any other file
         indirectly affecting the aspect of the manual.  The spurious
         call might also be the consequence of using a buggy `make' (AIX,
         DU, IRIX).  You might want to install the `Texinfo' package or
         the `GNU make' package.  Grab either from any GNU archive site.
make[2]: *** [/home/edgar/Desktop/gcc4/wrs-linux-4.1-176-nios2-wrs-linux-gnu/build/gcc/gcc/HTML/gcc-4.1.2/cpp/index.html] Error 1

edit ./Makefile search for missing texinfo and replace with

MAKEINFO = /usr/bin/makeinfo