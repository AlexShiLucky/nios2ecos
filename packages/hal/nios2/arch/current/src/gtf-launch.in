//==========================================================================
//
//      gtf-launch.in
//
//      Input file used to generate the gtf-launch script.
//
//==========================================================================
//####ECOSGPLCOPYRIGHTBEGIN####
// -------------------------------------------
// This file is part of eCos, the Embedded Configurable Operating System.
//
// eCos is free software; you can redistribute it and/or modify it under
// the terms of the GNU General Public License as published by the Free
// Software Foundation; either version 2 or (at your option) any later version.
//
// eCos is distributed in the hope that it will be useful, but WITHOUT ANY
// WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// for more details.
//
// You should have received a copy of the GNU General Public License along
// with eCos; if not, write to the Free Software Foundation, Inc.,
// 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA.
//
// As a special exception, if other files instantiate templates or use macros
// or inline functions from this file, or you compile this file and link it
// with other works to produce a work based on this file, this file does not
// by itself cause the resulting work to be covered by the GNU General Public
// License. However the source code for this file must still be made available
// in accordance with section (3) of the GNU General Public License.
//
// This exception does not invalidate any other reasons why a work based on
// this file might be covered by the GNU General Public License.
//
// -------------------------------------------
//####ECOSGPLCOPYRIGHTEND####

// 
// This file is used to generate the script used to launch the gtf-generate
// tool. This is done in order to extract the PTF (SOPC builder configuration)
// file from the project settings. i.e. this script allows us to set the input
// PTF file to be the value of the C macro CYGHWR_NIOS2_PTF set through
// configtool. Similarly, the input CPU name is set to the value of the
// CYGHWR_NIOS2_CPU macro.
//
// In order to achieve this, the launch script (gtf-launch) is generated by
// running this file through the C pre-processor. 
//

#define HASH #

// Insert the name of the shell to use.

HASH!/bin/sh

//
// Avoid the inclusion of the auto-generate file system.h. This is necessary
// in order to avoid the circular dependency that would otherwise be 
// generated, since gtf-launch is used to create system.h.
//

#define HAL_NIOS2_NO_SYSTEM_H

#include <pkgconf/hal_nios2.h>

//
// Undefine the implicit define for nios2. This is important since "nios2" is 
// part of the default path for the nios2 kit, which can result in the path
// name to PTF files getting corrupted.
// 

#ifdef nios2
#undef nios2
#endif

ptf_file=`cygpath -m CYGHWR_NIOS2_PTF`

// Check that the PTF file really exists. This allows us o generate a more
// meaningful error message.

if [ -f "$ptf_file" ]
then

//
// The call to gtf-generate. This sets the PTF and CPU name as apropriate, and
// then expects the remaining arguments to have been supplied on the command line.
//

gtf-generate --ptf="$ptf_file" --cpu=CYGHWR_NIOS2_CPU $@

else

echo Error: CYGHWR_NIOS2_PTF does not exist. Please verify the value of the SOPC builder \
configuration parameter set within the Nios2 architecture package. 

return 1

fi
